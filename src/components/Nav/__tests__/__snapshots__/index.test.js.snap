exports[`test <Nav /> 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <glamorous(nav)
    className="navigation">
    <glamorous(ul)
        className="navigation-container">
        <Link
            className="navigation-element"
            replace={false}
            to="/">
            Home
        </Link>
        <Link
            className="navigation-element"
            replace={false}
            to="/add">
            Add Book
        </Link>
        <Link
            className="navigation-element"
            replace={false}
            to="/user">
            User
        </Link>
        <Login />
    </glamorous(ul)>
</glamorous(nav)>,
  "nodes": Array [
    <glamorous(nav)
      className="navigation">
      <glamorous(ul)
            className="navigation-container">
            <Link
                  className="navigation-element"
                  replace={false}
                  to="/">
                  Home
            </Link>
            <Link
                  className="navigation-element"
                  replace={false}
                  to="/add">
                  Add Book
            </Link>
            <Link
                  className="navigation-element"
                  replace={false}
                  to="/user">
                  User
            </Link>
            <Login />
      </glamorous(ul)>
</glamorous(nav)>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance":  {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Navigation />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <glamorous(nav)
          className="navigation">
          <glamorous(ul)
                    className="navigation-container">
                    <Link
                              className="navigation-element"
                              replace={false}
                              to="/">
                              Home
                    </Link>
                    <Link
                              className="navigation-element"
                              replace={false}
                              to="/add">
                              Add Book
                    </Link>
                    <Link
                              className="navigation-element"
                              replace={false}
                              to="/user">
                              User
                    </Link>
                    <Login />
          </glamorous(ul)>
</glamorous(nav)>,
        "_debugID": 2,
        "_renderedOutput": <glamorous(nav)
          className="navigation">
          <glamorous(ul)
                    className="navigation-container">
                    <Link
                              className="navigation-element"
                              replace={false}
                              to="/">
                              Home
                    </Link>
                    <Link
                              className="navigation-element"
                              replace={false}
                              to="/add">
                              Add Book
                    </Link>
                    <Link
                              className="navigation-element"
                              replace={false}
                              to="/user">
                              User
                    </Link>
                    <Login />
          </glamorous(ul)>
</glamorous(nav)>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Navigation />,
}
`;
