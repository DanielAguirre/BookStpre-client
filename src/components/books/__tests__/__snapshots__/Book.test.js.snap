exports[`test <Book /> 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <glamorous(div)
    className="book">
    <glamorous(div)
        className="book-cover">
        <img
            alt="" />
    </glamorous(div)>
    <glamorous(div)
        className="book-content">
        <p
            className="book-title">
            Harry Poterr 1
        </p>
        <p
            className="book-author">
            J.K. Rownling
        </p>
        <p
            className="book-price" />
        <p
            className="book-publication" />
        <Link
            className="book-edit"
            replace={false}
            to="/edit/undefined">
            Edit 
        </Link>
    </glamorous(div)>
</glamorous(div)>,
  "nodes": Array [
    <glamorous(div)
      className="book">
      <glamorous(div)
            className="book-cover">
            <img
                  alt="" />
      </glamorous(div)>
      <glamorous(div)
            className="book-content">
            <p
                  className="book-title">
                  Harry Poterr 1
            </p>
            <p
                  className="book-author">
                  J.K. Rownling
            </p>
            <p
                  className="book-price" />
            <p
                  className="book-publication" />
            <Link
                  className="book-edit"
                  replace={false}
                  to="/edit/undefined">
                  Edit 
            </Link>
      </glamorous(div)>
</glamorous(div)>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance":  {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <BookCard
        book={
                Object {
                        "author": "J.K. Rownling",
                        "title": "Harry Poterr 1",
                      }
        } />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "book": Object {
            "author": "J.K. Rownling",
            "title": "Harry Poterr 1",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <glamorous(div)
          className="book">
          <glamorous(div)
                    className="book-cover">
                    <img
                              alt="" />
          </glamorous(div)>
          <glamorous(div)
                    className="book-content">
                    <p
                              className="book-title">
                              Harry Poterr 1
                    </p>
                    <p
                              className="book-author">
                              J.K. Rownling
                    </p>
                    <p
                              className="book-price" />
                    <p
                              className="book-publication" />
                    <Link
                              className="book-edit"
                              replace={false}
                              to="/edit/undefined">
                              Edit 
                    </Link>
          </glamorous(div)>
</glamorous(div)>,
        "_debugID": 2,
        "_renderedOutput": <glamorous(div)
          className="book">
          <glamorous(div)
                    className="book-cover">
                    <img
                              alt="" />
          </glamorous(div)>
          <glamorous(div)
                    className="book-content">
                    <p
                              className="book-title">
                              Harry Poterr 1
                    </p>
                    <p
                              className="book-author">
                              J.K. Rownling
                    </p>
                    <p
                              className="book-price" />
                    <p
                              className="book-publication" />
                    <Link
                              className="book-edit"
                              replace={false}
                              to="/edit/undefined">
                              Edit 
                    </Link>
          </glamorous(div)>
</glamorous(div)>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <BookCard
    book={
        Object {
            "author": "J.K. Rownling",
            "title": "Harry Poterr 1",
          }
    } />,
}
`;

exports[`test <Books /> 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <glamorous(div)
    className="books-container">
    <BookCard
        book={
            Object {
                "_id": 1,
                "author": "J.K. Rownling",
                "title": "Harry Poterr 1",
              }
        } />
</glamorous(div)>,
  "nodes": Array [
    <glamorous(div)
      className="books-container">
      <BookCard
            book={
                  Object {
                        "_id": 1,
                        "author": "J.K. Rownling",
                        "title": "Harry Poterr 1",
                      }
            } />
</glamorous(div)>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance":  {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <BookList
        bookList={
                Array [
                        Object {
                          "_id": 1,
                          "author": "J.K. Rownling",
                          "title": "Harry Poterr 1",
                        },
                      ]
        } />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "bookList": Array [
            Object {
              "_id": 1,
              "author": "J.K. Rownling",
              "title": "Harry Poterr 1",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <glamorous(div)
          className="books-container">
          <BookCard
                    book={
                              Object {
                                        "_id": 1,
                                        "author": "J.K. Rownling",
                                        "title": "Harry Poterr 1",
                                      }
                    } />
</glamorous(div)>,
        "_debugID": 4,
        "_renderedOutput": <glamorous(div)
          className="books-container">
          <BookCard
                    book={
                              Object {
                                        "_id": 1,
                                        "author": "J.K. Rownling",
                                        "title": "Harry Poterr 1",
                                      }
                    } />
</glamorous(div)>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <BookList
    bookList={
        Array [
            Object {
              "_id": 1,
              "author": "J.K. Rownling",
              "title": "Harry Poterr 1",
            },
          ]
    } />,
}
`;
