exports[`test <Search />, Should reder the searrh component 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <glamorous(div)
    className="search">
    <glamorous(unknown)
        className="search-input"
        id="searchTitle"
        name="isGoing"
        onChange={undefined}
        placeholder="Title"
        value={undefined} />
    <glamorous(unknown)
        className="search-input"
        id="searchAuthor"
        name="authorInput"
        onChange={undefined}
        placeholder="Author"
        value={undefined} />
    <glamorous(unknown)
        className="search-input"
        id="searchPrice"
        name="priceInput"
        onChange={undefined}
        placeholder="Price"
        value={undefined} />
    <button
        className="search-query"
        id="search"
        onClick={[Function]}>
         Search 
    </button>
</glamorous(div)>,
  "nodes": Array [
    <glamorous(div)
      className="search">
      <glamorous(unknown)
            className="search-input"
            id="searchTitle"
            name="isGoing"
            onChange={undefined}
            placeholder="Title"
            value={undefined} />
      <glamorous(unknown)
            className="search-input"
            id="searchAuthor"
            name="authorInput"
            onChange={undefined}
            placeholder="Author"
            value={undefined} />
      <glamorous(unknown)
            className="search-input"
            id="searchPrice"
            name="priceInput"
            onChange={undefined}
            placeholder="Price"
            value={undefined} />
      <button
            className="search-query"
            id="search"
            onClick={[Function]}>
             Search 
      </button>
</glamorous(div)>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance":  {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Search
        foundBooks={[Function]}
        titleInputRef={[Function]} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "foundBooks": [Function],
          "titleInputRef": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <glamorous(div)
          className="search">
          <glamorous(unknown)
                    className="search-input"
                    id="searchTitle"
                    name="isGoing"
                    onChange={undefined}
                    placeholder="Title"
                    value={undefined} />
          <glamorous(unknown)
                    className="search-input"
                    id="searchAuthor"
                    name="authorInput"
                    onChange={undefined}
                    placeholder="Author"
                    value={undefined} />
          <glamorous(unknown)
                    className="search-input"
                    id="searchPrice"
                    name="priceInput"
                    onChange={undefined}
                    placeholder="Price"
                    value={undefined} />
          <button
                    className="search-query"
                    id="search"
                    onClick={[Function]}>
                     Search 
          </button>
</glamorous(div)>,
        "_debugID": 2,
        "_renderedOutput": <glamorous(div)
          className="search">
          <glamorous(unknown)
                    className="search-input"
                    id="searchTitle"
                    name="isGoing"
                    onChange={undefined}
                    placeholder="Title"
                    value={undefined} />
          <glamorous(unknown)
                    className="search-input"
                    id="searchAuthor"
                    name="authorInput"
                    onChange={undefined}
                    placeholder="Author"
                    value={undefined} />
          <glamorous(unknown)
                    className="search-input"
                    id="searchPrice"
                    name="priceInput"
                    onChange={undefined}
                    placeholder="Price"
                    value={undefined} />
          <button
                    className="search-query"
                    id="search"
                    onClick={[Function]}>
                     Search 
          </button>
</glamorous(div)>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Search
    foundBooks={[Function]}
    titleInputRef={[Function]} />,
}
`;
